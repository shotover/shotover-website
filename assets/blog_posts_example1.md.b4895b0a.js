import{_ as r,e,o as s,c as i,g as t,h as c}from"./app.4efe6a50.js";const v=JSON.parse('{"title":"How to Keep Control of Your Data and Infrastructure","description":"","frontmatter":{},"headers":[{"level":2,"title":"What is vendor lock-in?","slug":"what-is-vendor-lock-in","link":"#what-is-vendor-lock-in","children":[]}],"relativePath":"blog/posts/example1.md"}'),l={name:"blog/posts/example1.md"},p=c('<h1 id="how-to-keep-control-of-your-data-and-infrastructure" tabindex="-1">How to Keep Control of Your Data and Infrastructure <a class="header-anchor" href="#how-to-keep-control-of-your-data-and-infrastructure" aria-hidden="true">#</a></h1><p><img src="https://www.simplilearn.com/ice9/free_resources_article_thumb/what_is_image_Processing.jpg" alt="" title="How to Keep Control of Your Data and Infrastructure"></p><p>No matter what stage a company is at, there\u2019s always a palpable fear of vendor lock-in when adopting new software. This fear becomes heightened when it comes to database systems. Vendor lock-in is prevalent with proprietary software, where vendors make users sweat over leaving the platform to adopt a new one. This essentially defeats the purpose of having a future-proof tech stack.</p><p>Besides, you still have to factor in the potential increase in usage or license cost for these proprietary solutions. In a way, it\u2019s hardly surprising that cost savings and vendor lock-in are two main factors that drive the adoption of open-source database software, according to a 2020 study by Percona.</p><p>This blog post will explore the meaning and implications of vendor lock-in when adopting database software.</p><h2 id="what-is-vendor-lock-in" tabindex="-1">What is vendor lock-in? <a class="header-anchor" href="#what-is-vendor-lock-in" aria-hidden="true">#</a></h2><p>According to Wikipedia, \u201Cvendor lock-in, also known as proprietary lock-in or customer lock-in, makes a customer dependent on a vendor for products, unable to use another vendor without substantial switching costs.\u201D</p><p>Vendor lock-in makes you dependent on a single vendor or technology without an easy way to migrate or switch to new software in the future without incurring significant financial implications, legal constraints, integration, or compatibility issues.</p><p>In its place, companies can enjoy all the benefits that their license covers, including maintenance, regular updates, hosting options, etc.</p>',9);function d(h,u,f,m,w,_){const o=e("SocialButtons"),a=e("RelatedPosts"),n=e("Footer");return s(),i("div",null,[p,t(o),t(a),t(n)])}const k=r(l,[["render",d]]);export{v as __pageData,k as default};
